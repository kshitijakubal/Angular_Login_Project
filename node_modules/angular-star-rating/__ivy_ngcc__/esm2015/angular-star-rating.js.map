{"version":3,"file":"angular-star-rating.js","sources":["ng:/angular-star-rating/out/src/interfaces/star-rating-config.interface.ts","ng:/angular-star-rating/out/src/services/star-rating.utils.ts","ng:/angular-star-rating/out/src/services/star-rating.ts","ng:/angular-star-rating/out/src/services/star-rating-config.service.ts","ng:/angular-star-rating/out/src/components/star-rating/star-rating.component.ts","ng:/angular-star-rating/out/src/components/star-rating-control/star-rating-control.component.ts","ng:/angular-star-rating/out/src/angular-star-rating.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAA,gBAAA,CAAA;AAAE,CA0BD;AACD;AAAC;AAAI;AAAkC;AAAyC;AClChF,MAAA,eAAA,CAAA;AAAE;AAAQ;AACF;AACA;AAAQ,IAUd,OAAO,aAAa,CAAC,UAAkB,EAAzC;AAAE,QACE,qBAAI,KAAK,GAAkB,EAAE,CAAC;AAClC,QAAI,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;AACzC,YAAM,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxB,SAAK;AACL,QAAI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEE;AACD;AACY;AAAQ,IAKnB,OAAO,kBAAkB,CAAC,MAAc,EAA1C;AAAE,QACE,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,KAAG;AACH;AAEE;AAEE;AAA6B;AACnB;AAAmB;AAAQ,IAQvC,OAAO,QAAQ,CACb,MAAc,EACd,UAAkB,EAClB,WAA6B,EAHjC;AAAE,QAKE,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;AACzB;AAEG,QAAC,IAAI,WAAW,EAAE;AACrB,YAAM,OAAO,WAAW,CAAC;AACzB,SAAK;AACL;AAEG,QAAC,qBAAI,YAAY,GAAG,UAAU,GAAG,CAAC,CAAC;AACtC;AAEG,QAAC,qBAAI,KAAK,GAAoB,SAAS,CAAC;AAC3C,QAAI,IAAI,MAAM,GAAG,CAAC,EAAE;AACpB,YAAM,KAAK,GAAG,UAAU,CAAC;AACzB,SAAK;AACL,QAAI,IAAI,MAAM,GAAG,YAAY,EAAE;AAC/B,YAAM,KAAK,GAAG,IAAI,CAAC;AACnB,SAAK;AACL,QAAI,IAAI,MAAM,GAAG,YAAY,GAAG,CAAC,EAAE;AACnC,YAAM,KAAK,GAAG,UAAU,CAAC;AACzB,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEE;AACC;AAAmB;AAAQ,IAI5B,OAAO,mBAAmB,CAAC,SAAiB,EAA9C;AAAE,QACE,OAAO,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5C,KAAG;AACH,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyC;ACxEhF,MAAA,UAAA,CAAA;AAAE;AAAQ;AACF;AAAmB;AAAQ,IAoBjC,IAAI,MAAM,CAAC,KAAa,EAA1B;AAAE,QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1B,KAAG;AACH;AAEC;AACA;AACE,IACD,IAAI,aAAa,GAAnB;AAAE,QACE,OAAO,IAAI,CAAC,cAAc,CAAC;AAC/B,KAAG;AACH;AACO;AAAwB;AACnB;AAAQ,IADlB,IAAI,aAAa,CAAC,KAAc,EAAlC;AAAE,QACE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC;AAClC;AAEG,QAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,KAAG;AACH;AAEC;AAED;AAAQ,IAoBN,IAAI,EAAE,GAAR;AAAE,QACE,OAAO,IAAI,CAAC,GAAG,CAAC;AACpB,KAAG;AACH;AACO;AACF;AAAmB;AAExB,IAHE,IAAI,EAAE,CAAC,KAAa,EAAtB;AAAE,QACE,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC;AAC3B,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,KAAK,GAAX;AAAE,QACE,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AACO;AACN;AAAmB;AACnB,IAFC,IAAI,KAAK,CAAC,KAAc,EAA1B;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;AAC1B,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,SAAS,GAAf;AAAE,QACE,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AACH;AACO;AAAwB;AACd;AAAQ,IADvB,IAAI,SAAS,CAAC,KAAa,EAA7B;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,aAAa,GAAnB;AAAE,QACE,OAAO,IAAI,CAAC,cAAc,CAAC;AAC/B,KAAG;AACH;AACO;AAAwB;AAAmB;AAC9C,IADF,IAAI,aAAa,CAAC,KAA8B,EAAlD;AAAE,QACE,IAAI,CAAC,cAAc,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC7D,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,YAAY,GAAlB;AAAE,QACE,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,KAAG;AACH;AACO;AAAwB;AAClB;AAAQ,IADnB,IAAI,YAAY,CAAC,KAAc,EAAjC;AAAE,QACE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC;AACjC,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,YAAY,GAAlB;AAAE,QACE,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,KAAG;AACH;AACO;AAAwB;AAClB;AAAQ,IADnB,IAAI,YAAY,CAAC,KAAc,EAAjC;AAAE,QACE,IAAI,CAAC,aAAa,GAAG,KAAK,KAAK,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;AAC/D,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,WAAW,GAAjB;AAAE,QACE,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,SAAS,CAAC;AACrE,KAAG;AACH;AACO;AAAwB;AACzB;AAAQ,IADZ,IAAI,WAAW,CAAC,KAAsB,EAAxC;AAAE,QACE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9B;AAEG,QAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,SAAS,GAAf;AAAE,QACE,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AACH;AACO;AAAwB;AAC3B;AAAQ,IADV,IAAI,SAAS,CAAC,KAA0B,EAA1C;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,KAAK,IAAI,SAAS,CAAC;AACzC,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,UAAU,GAAhB;AAAE,QACE,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH;AACO;AAAwB;AACf;AAAQ,IADtB,IAAI,UAAU,CAAC,KAAa,EAA9B;AAAE,QACE,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AAClE;AAEG,QAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChE;AAEG,QAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,WAAW,GAAjB;AAAE,QACE,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,KAAG;AACH;AACO;AAAwB;AAChB;AAAQ,IADrB,IAAI,WAAW,CAAC,KAAa,EAA/B;AAAE,QACE,IAAI,CAAC,YAAY,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;AAC9C,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,KAAK,GAAX;AAAE,QACE,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AACO;AAAwB;AACnB;AAAQ,IADlB,IAAI,KAAK,CAAC,KAAsB,EAAlC;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAC7C,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,IAAI,GAAV;AAAE,QACE,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC1C,KAAG;AACH;AACO;AAAwB;AAClB;AAAQ,IADnB,IAAI,IAAI,CAAC,KAAsB,EAAjC;AAAE,QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,QAAQ,GAAd;AAAE,QACE,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AAClD,KAAG;AACH;AACO;AAAwB;AAC1B;AAAQ,IADX,IAAI,QAAQ,CAAC,KAA0B,EAAzC;AAAE,QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,KAAK,GAAX;AAAE,QACE,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AACO;AAAwB;AACvB;AAAQ,IADd,IAAI,KAAK,CAAC,KAA0B,EAAtC;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,QAAQ,GAAd;AAAE,QACE,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH;AACO;AAAwB;AACd;AAAQ,IADvB,IAAI,QAAQ,CAAC,KAAc,EAA7B;AAAE,QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC;AAC7B,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,QAAQ,GAAd;AAAE,QACE,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH;AACO;AAAwB;AACd;AAAQ,IADvB,IAAI,QAAQ,CAAC,KAAc,EAA7B;AAAE,QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC;AAC7B,KAAG;AACH;AACO;AAAmB;AAAQ,IAGhC,IAAI,IAAI,GAAV;AAAE,QACE,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,KAAG;AACH;AACO;AACJ;AAAmB;AAAQ,IAD5B,IAAI,IAAI,CAAC,KAAa,EAAxB;AAAE,QACE,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;AACvC,KAAG;AACH;AACO;AAAmB;AAAQ,IAMhC,IAAI,MAAM,GAAZ;AAAE,QACE,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,KAAG;AACH;AAEC;AACE;AACE;AAEA;AAAmB;AACrB,IADD,SAAS,CAAC,KAAa,EAAzB;AAAE;AACU,QACR,qBAAI,SAAS,GAAG,CAAC,CAAC;AACtB,QAAI,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;AAChD,YAAM,SAAS,GAAG,KAAK,CAAC;AACxB,SAAK;AACL;AAEG,QAAC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE;AACjC,YAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;AAClC,SAAK;AACL,QAAI,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AAC7B;AAEG,QAAC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AACjE;AAEG,QAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B;AAEG,QAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,KAAG;AACH;AACO;AAAyB;AAAQ,IAAtC,WAAF,CAAc,MAA+B,EAA7C;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB;AAEG,QAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7C,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC3C,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AAC/C,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;AAC9C,QAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AAC5C,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAChD;AAEG,QAAC,IACE,UAAU,IAAI,IAAI,CAAC,MAAM;AAC/B,YAAM,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,KAAK,UAClC,EAAE;AACN,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC3C,SAAK;AACL,QACI,IACE,oBAAoB,IAAI,IAAI,CAAC,MAAM;AACzC,YAAM,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,KAAK,UAC5C,EAAE;AACN,YAAM,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;AAC/D,SAAK;AACL,QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AAC7C,QAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACpB,QAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAClB,KAAG;AACH;AACO;AACP;AAAQ,IADN,UAAU,GAAZ;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC;AACnC,KAAG;AACH;AACO;AAAmB;AAAQ,IAAhC,mBAAmB,GAArB;AAAE,QACE,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC5C,KAAG;AACH;AACO;AAAiC;AACvB;AAAQ,IADvB,QAAQ,CAAC,aAAa,GAAG,KAAK,EAAhC;AAAE;AACE,QACA,uBAAM,WAAW,GAAG,aAAa,GAAG,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,MAAM,CAAC;AACtE,QAAI,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;AAC7C,YAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CACxB,WAAW,EACX,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,CACnC,WAAW,EACX,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,CACjB,CAAC;AACR,SAAK;AACL,KAAG;AACH;AACO;AAAmB;AACvB,IADD,kBAAkB,GAApB;AAAE;AACE,QACA,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B;AACM,YAAA,IAAI,OAAO,IAAI,CAAC,kBAAkB,KAAK,UAAU,EAAE;AACzD,gBAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpE,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/E,aAAO;AACP,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACnC,SAAK;AACL,KAAG;AACH;AACO;AAAmB;AAAQ,IAAhC,sBAAsB,GAAxB;AAAE,QACE,uBAAM,UAAU,GAAa,EAAE,CAAC;AACpC,QACI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,GAAG,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,CAAC;AAC/E,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC;AACxD,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;AACtD,QACI,uBAAM,WAAW,GAAG,IAAI,CAAC,WAAW;AACxC,cAAQ,QAAQ,GAAG,IAAI,CAAC,WAAW;AACnC,cAAQ,SAAS,CAAC;AAClB,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;AAC1D,QACI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AAC7D,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,QAAQ,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;AAC7E,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AAC7D,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;AAClE,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;AACtD,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC;AACrD,QAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;AACzE,QACI,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC,KAAG;AACH;AACO;AACG;AAAQ,IADhB,SAAS,GAAX;AAAE;AACwB,QACtB,uBAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAChF,KAAG;AACH;AACO;AACG;AAAQ,IADhB,SAAS,GAAX;AAAE;AACuB,QACrB,uBAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,OAAO,GAAG,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,KAAG;AACH;AACO;AACO;AACb,IAFC,KAAK,GAAP;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACpB,KAAG;AACH,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyC;AAAI;AAAI;AAAuD;AAAgH;AAAqF;AClcpV,MAAA,uBAAA,CAAA;AAAE;AAAoB,QACtB,IAAA,CAAA,WAAA,GAAgB,yBAAyB,CAAzC;AAAC,QAUD,IAAA,CAAA,UAAA,GAAuB,wBAAwB,CAA/C;AAAC,QAUD,IAAA,CAAA,YAAA,GAAyB,0BAA0B,CAAnD;AAAC,QAUD,IAAA,CAAA,WAAA,GAAwB,CAAC,CAAzB;AAAC,QAUD,IAAA,CAAA,KAAA,GAAmC,QAAQ,CAA3C;AAAC,QAoBD,IAAA,CAAA,cAAA,GAAoD,MAAM,CAA1D;AAAC,QAUD,IAAA,CAAA,MAAA,GAAoC,YAAY,CAAhD;AAAC,QAUD,IAAA,CAAA,SAAA,GAA2C,KAAK,CAAhD;AAAC,QAUD,IAAA,CAAA,WAAA,GAAwB,gBAAgB,CAAxC;AAAC,QAUD,IAAA,CAAA,QAAA,GAAqB,IAAI,CAAC,UAAU,GAAG,uBAAuB,CAA9D;AAAC,QAUD,IAAA,CAAA,iBAAA,GAA8B,YAAY,CAA1C;AAAC,QAUD,IAAA,CAAA,gBAAA,GAA6B,WAAW,CAAxC;AAAC,QAUD,IAAA,CAAA,kBAAA,GAA+B,aAAa,CAA5C;AAAC,QAUD,IAAA,CAAA,aAAA,GAAkC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAA5E;AAAC,QAUD,IAAA,CAAA,YAAA,GAAiC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAA1E;AAAC,QAUD,IAAA,CAAA,cAAA,GAAmC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAA9E;AAAC;AAAM;AAAQ;AAAmB;AAAQ,IA9JxC,IAAI,UAAU,GAAhB;AAAE,QACE,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH;AACO;AAA6B;AACpB;AAAQ,IADtB,IAAI,UAAU,CAAC,UAAkB,EAAnC;AAAE,QACE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,SAAS,GAAf;AAAE,QACE,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AACH;AACO;AAA4B;AAClB;AAAQ,IADvB,IAAI,SAAS,CAAC,SAAiB,EAAjC;AAAE,QACE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,WAAW,GAAjB;AAAE,QACE,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,KAAG;AACH;AACO;AAA8B;AACtB;AAAQ,IADrB,IAAI,WAAW,CAAC,WAAmB,EAArC;AAAE,QACE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AACpC,KAAG;AACH;AACO;AAAmB;AAEpB,IAAJ,IAAI,UAAU,GAAhB;AAAE,QACE,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH;AACO;AAA6B;AACpB;AAAQ,IADtB,IAAI,UAAU,CAAC,UAAkB,EAAnC;AAAE,QACE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,IAAI,GAAV;AAAE,QACE,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,KAAG;AACH;AACO;AAAuB;AACjB;AAAQ,IADnB,IAAI,IAAI,CAAC,IAAqB,EAAhC;AAAE,QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,WAAW,GAAjB;AAAE,QACE,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,KAAG;AACH;AACO;AAAwB;AACzB;AAAQ,IADZ,IAAI,WAAW,CAAC,KAAsB,EAAxC;AAAE,QACE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9B,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,aAAa,GAAnB;AAAE,QACE,OAAO,IAAI,CAAC,cAAc,CAAC;AAC/B,KAAG;AACH;AACO;AAAgC;AAAmB;AACtD,IADF,IAAI,aAAa,CAAC,aAAsC,EAA1D;AAAE,QACE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACxC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,KAAK,GAAX;AAAE,QACE,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH;AACO;AAAwB;AACnB;AAAQ,IADlB,IAAI,KAAK,CAAC,KAAsB,EAAlC;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,QAAQ,GAAd;AAAE,QACE,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH;AACO;AAA2B;AAC7B;AAAQ,IADX,IAAI,QAAQ,CAAC,QAA6B,EAA5C;AAAE,QACE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC9B,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,UAAU,GAAhB;AAAE,QACE,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH;AACO;AAA6B;AACpB;AAAQ,IADtB,IAAI,UAAU,CAAC,UAAkB,EAAnC;AAAE,QACE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,OAAO,GAAb;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,KAAG;AACH;AACO;AACP;AAAmB;AAAQ,IADzB,IAAI,OAAO,CAAC,OAAe,EAA7B;AAAE,QACE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,gBAAgB,GAAtB;AAAE,QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;AAClC,KAAG;AACH;AACO;AAAmC;AAChC;AAAQ,IADhB,IAAI,gBAAgB,CAAC,gBAAwB,EAA/C;AAAE,QACE,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;AAC9C,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,eAAe,GAArB;AAAE,QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,KAAG;AACH;AACO;AAAkC;AAC9B;AAAQ,IADjB,IAAI,eAAe,CAAC,eAAuB,EAA7C;AAAE,QACE,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;AAC5C,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,iBAAiB,GAAvB;AAAE,QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;AACnC,KAAG;AACH;AACO;AAAoC;AAClC;AAAQ,IADf,IAAI,iBAAiB,CAAC,iBAAyB,EAAjD;AAAE,QACE,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AAChD,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,YAAY,GAAlB;AAAE,QACE,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,KAAG;AACH;AACO;AAA+B;AACxB;AAAQ,IADpB,IAAI,YAAY,CAAC,YAAoB,EAAvC;AAAE,QACE,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AACtC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,WAAW,GAAjB;AAAE,QACE,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,KAAG;AACH;AACO;AAA8B;AACtB;AAAQ,IADrB,IAAI,WAAW,CAAC,WAAmB,EAArC;AAAE,QACE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AACpC,KAAG;AACH;AACO;AAAmB;AAAQ,IAEhC,IAAI,aAAa,GAAnB;AAAE,QACE,OAAO,IAAI,CAAC,cAAc,CAAC;AAC/B,KAAG;AACH;AACO;AAAgC;AAC1B;AAAQ,IADnB,IAAI,aAAa,CAAC,aAAqB,EAAzC;AAAE,QACE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACxC,KAAG;AACH;AACO;AAEP;AACK;AACH;AAAmB;AACf,IALJ,QAAQ,CACN,MAAc,EACd,UAAkB,EAClB,WAA6B,EAHjC;AAAE,QAKE,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;AACzB;AAEG,QAAC,IAAI,WAAW,EAAE;AACrB,YAAM,OAAO,WAAW,CAAC;AACzB,SAAK;AACL;AAEG,QAAC,uBAAM,YAAY,GAAG,UAAU,GAAG,CAAC,CAAC;AACxC;AAEG,QAAC,qBAAI,KAAK,GAAoB,SAAS,CAAC;AAC3C,QAAI,IAAI,MAAM,GAAG,CAAC,EAAE;AACpB,YAAM,KAAK,GAAG,UAAU,CAAC;AACzB,SAAK;AACL,QAAI,IAAI,MAAM,GAAG,YAAY,EAAE;AAC/B,YAAM,KAAK,GAAG,IAAI,CAAC;AACnB,SAAK;AACL,QAAI,IAAI,MAAM,GAAG,YAAY,GAAG,CAAC,EAAE;AACnC,YAAM,KAAK,GAAG,UAAU,CAAC;AACzB,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AACO;AAAyB;AAC7B;AAAQ,IADT,kBAAkB,CAAC,MAAc,EAAnC;AAAE,QACE,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,KAAG;AACH,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyC;AC9JhF,MAAA,mBAAiC,SAAQ,UAAU,CAAnD;AAAE;AAAQ;AAAyB;AAAQ,IA+FzC,WAAF,CAAc,MAA+B,EAA7C;AAAE,QACE,KAAK,CAAC,MAAM,CAAC,CAAC;AAClB;AAEa,QA/Fb,IAAA,CAAA,eAAA,GAA8C,IAAI,YAAY,EAAc,CAA5E;AAAC,QAED,IAAA,CAAA,YAAA,GAAkD,IAAI,YAAY,EAE7D,CAFL;AAAC,QAID,IAAA,CAAA,iBAAA,GAA4D,IAAI,YAAY,EAEvE,CAFL;AAAC,KAuFE;AACH;AACO;AACW;AAChB;AAAQ,IAvFR,WAAW,CAAC,MAAkB,EAAhC;AAAE,QACE,IAAI,IAAI,CAAC,eAAe,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AACO;AAAyB;AAC/B;AAAQ,IADP,kBAAkB,CAAC,MAAyB,EAA9C;AAAE,QACE,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,YAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrC,SAAK;AACL,KAAG;AACH;AACO;AAAyB;AAC7B;AAAQ,IADT,WAAW,CAAC,MAA8B,EAA5C;AAAE,QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAChC,YAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,SAAK;AACL,KAAG;AACH;AACO;AAED;AACI;AAAmB;AAC5B,IADC,SAAS,CAAC,KAAoB,EAAhC;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;AACrC,YAAM,OAAO;AACb,SAAK;AACL,QACI,uBAAM,QAAQ,GAAQ;AAC1B;AACM,YAAA,KAAK,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACnC,YAAM,SAAS,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACvC,YAAM,SAAS,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACvC;AAEK,YAAC,IAAI,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AAClC,YAAM,UAAU,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACxC,YAAM,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACrC;AAEK,YAAC,SAAS,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;AACnC,YAAM,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;AAChC,YAAM,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;AAChC,SAAK,CAAC;AACN,QACI,uBAAM,YAAY,GAAG,CAAC,SAAiB,KAA3C;AAAE,YACI,uBAAM,IAAI,GAAG,OAAO,CAAC;AAC3B,YAAM,uBAAM,KAAK,GAAW,QAAQ,CAC5B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CACxD,CAAC;AACR,YAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,SAAK,CAAC;AACN,QACI,IACE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC7B,YAAM,eAAe,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CACnD,EAAE;AACN,YAAM,IAAI,eAAe,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AAC9D,gBAAQ,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,aAAO;AAAC,iBAAK;AACb,gBAAQ,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;AAClC,aAAO;AACP,YAAM,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,YAAM,KAAK,CAAC,eAAe,EAAE,CAAC;AAC9B,SAAK;AACL,KACG;AACH;AACO;AACS;AAAmB;AAC/B,IADF,WAAW,CAAC,MAAe,EAA7B;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC3D,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AACpE;AACI,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACxB;AAEG,QAAC,uBAAM,MAAM,GAA2B,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;AAC7E,QAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC7B,KAAG;AACH;AACO;AAAwB;AAC9B;AAAQ,IAIP,SAAS,CAAC,KAAa,EAAzB;AAAE,QACE,uBAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AAClC,QAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3B;AAEG,QAAC,IAAI,SAAS,KAAK,IAAI,CAAC,MAAM,EAAE;AACnC,YAAM,uBAAM,MAAM,GAAsB,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChE,YAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACtC,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE;AACE;AACE;AAEH;AAAO;AAEA;AAAmB;AAChC,IADA,aAAa,CAAC,MAAc,EAA9B;AAAE;AAA6B,QAE3B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;AACrC,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,QACI,uBAAM,kBAAkB,GAAe;AAC3C,YAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,SAAK,CAAC;AACN,QAAI,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;AACzC,KAAG;AACH;uCA3LA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,kBACT,QAAQ,EAAE,aAAa,kBACvB,MAAM,EAAE,sBACN;YAAoB,sBACpB,UAAU,sBACV,eAAe,sBACf,cAAc,sBACd,QAAQ,sBACR,MAAM,sBACN,UAAU,sBACV,UAAU,sBACV,OAAO,sBACP,UAAU,sBACV,MAAM,sBACN,OAAO,sBACP,YAAY,sBACZ,WAAW,sBACX,aAAa,sBAEb,eAAe,sBACf,WAAW,sBACX,IAAI,kBACL,kBACD,OAAO,EAAE,CAAC,iBAAiB,EAAE,cAAc,EAAE,mBAAmB,CAAC,kBACjE,MAAM,EAAE,EAAE,kBACV,QAAQ,EAAE,CAAZ;;;;;;;;;oBA0BA,CAAC,cACA,EAAD,EAAA;;;;;;wEACC;AAAC;AAAmB;AAErB,IA1DA,EAAA,IAAA,EAAQ,uBAAuB,GAA/B;AAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iFAAE;AAAC;AAAC;AAAI;AAAkC;AAC1C;ACGF,MAAM,4BAA4B,GAAG;AACrC,IAAE,OAAO,EAAE,iBAAiB;AAC5B,IAAE,WAAW,EAAE,UAAU,CAAC,MAAM,0BAA0B,CAAC;AAC3D,IAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC;AA0DF,MAAA,0BAAwC,SAAQ,UAAU,CAA1D;AAAE;AAAQ;AAAyB;AAAQ,IA+IzC,WAAF,CAAc,MAA+B,EAA7C;AAAE,QACE,KAAK,CAAC,MAAM,CAAC,CAAC;AAClB;AAEa,QA9Ib,IAAA,CAAA,eAAA,GAA8C,IAAI,YAAY,EAAc,CAA5E;AAAC,QAED,IAAA,CAAA,YAAA,GAAkD,IAAI,YAAY,EAE7D,CAFL;AAAC,QAID,IAAA,CAAA,iBAAA,GAA4D,IAAI,YAAY,EAEvE,CAFL;AAAC,QAMD,IAAA,CAAA,uBAAA,GAAoC,KAAK,CAAzC;AAAC,QACD,IAAA,CAAA,iBAAA,GAA8B,KAAK,CAAnC;AAAC,KA+HE;AACH;AACO;AACW;AAChB;AAAQ,IAjIR,WAAW,CAAC,MAAkB,EAAhC;AAAE,QACE,IAAI,IAAI,CAAC,eAAe,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxC,SAAK;AACL,KAAG;AACH;AACO;AAAyB;AAC/B;AAAQ,IADP,kBAAkB,CAAC,MAAyB,EAA9C;AAAE,QACE,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,YAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrC,SAAK;AACL,KAAG;AACH;AACO;AAAyB;AAC7B;AAAQ,IADT,WAAW,CAAC,MAA8B,EAA5C;AAAE,QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAChC,YAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,SAAK;AACL,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW,GAAb;AAAE,QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAChC,YAAM,IAAI,CAAC,OAAO,EAAE,CAAC;AACrB,SAAK;AACL,KAAG;AACH;AACO;AAAwB;AAClB;AAAQ,IADnB,iBAAiB,CAAC,KAAa,EAAjC;AAAE,QACE,IAAI,IAAI,CAAC,uBAAuB,EAAE;AACtC,YAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAChC,SAAK;AACL,KAAG;AACH;AACO;AAED;AACI;AAAmB;AAC5B,IADC,SAAS,CAAC,KAAoB,EAAhC;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;AACrC,YAAM,OAAO;AACb,SAAK;AACL,QACI,uBAAM,QAAQ,GAAQ;AAC1B;AACM,YAAA,KAAK,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACnC,YAAM,SAAS,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACvC,YAAM,SAAS,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACvC;AAEK,YAAC,IAAI,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AAClC,YAAM,UAAU,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACxC,YAAM,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE;AACrC;AAEK,YAAC,SAAS,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;AACnC,YAAM,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;AAChC,YAAM,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;AAChC,SAAK,CAAC;AACN,QACI,uBAAM,YAAY,GAAG,CAAC,SAAiB,KAA3C;AAAE,YACI,uBAAM,IAAI,GAAG,OAAO,CAAC;AAC3B,YAAM,uBAAM,KAAK,GAAW,QAAQ,CAC5B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CACxD,CAAC;AACR,YAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,SAAK,CAAC;AACN,QACI,IACE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC7B,YAAM,eAAe,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CACnD,EAAE;AACN,YAAM,IAAI,eAAe,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AAC9D,gBAAQ,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,aAAO;AAAC,iBAAK;AACb,gBAAQ,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;AAClC,aAAO;AACP,YAAM,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,YAAM,KAAK,CAAC,eAAe,EAAE,CAAC;AAC9B,SAAK;AACL,QACI,IAAI,CAAC,WAAW,EAAE,CAAC;AACvB,KAAG;AACH;AACO;AACO;AACX;AAAQ,IADT,MAAM,CAAC,KAAiB,EAA1B;AAAE,QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,QAAI,KAAK,CAAC,cAAc,EAAE,CAAC;AAC3B,QAAI,KAAK,CAAC,eAAe,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,WAAW,EAAE,CAAC;AACvB,KAAG;AACH;AACO;AACP;AAAmB;AACf,IAFF,OAAO,CAAC,KAAiB,EAA3B;AAAE,QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,QAAI,KAAK,CAAC,cAAc,EAAE,CAAC;AAC3B,QAAI,KAAK,CAAC,eAAe,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,WAAW,EAAE,CAAC;AACvB,KAAG;AACH;AACO;AACS;AAAmB;AAC/B,IADF,WAAW,CAAC,MAAe,EAA7B;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC3D,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AACpE;AAEG,QAAC,uBAAM,MAAM,GAA2B,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;AAC7E,QAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC7B,KAAG;AACH;AACO;AAED;AAAsB;AACZ;AACf,IAFC,UAAU,CAAC,GAAQ,EAArB;AAAE,QACE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;AACtB,KAAG;AACH;AACO;AAAqB;AACjB;AAAQ,IADjB,gBAAgB,CAAC,EAAO,EAA1B;AAAE,QACE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;AACxC,KAAG;AACH;AACO;AAAqB;AAClB;AAAQ,IADhB,iBAAiB,CAAC,EAAO,EAA3B;AAAE,QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AACtB,QAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAClC,KAAG;AACH;AACO;AAAwB;AAC9B;AAAQ,IAIP,SAAS,CAAC,KAAa,EAAzB;AAAE,QACE,uBAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AAClC,QAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3B;AAEG,QAAC,IAAI,SAAS,KAAK,IAAI,CAAC,MAAM,EAAE;AACnC,YAAM,uBAAM,MAAM,GAAsB,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChE,YAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACtC,YACM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACE;AACE;AACE;AAEH;AAAO;AAEA;AAAmB;AAChC,IADA,aAAa,CAAC,MAAc,EAA9B;AAAE;AAA6B,QAE3B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;AACrC,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,QACI,uBAAM,kBAAkB,GAAe;AAC3C,YAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,SAAK,CAAC;AACN,QAAI,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;AACzC,KAAG;AACH;8CAhPA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,kBACT,QAAQ,EAAE,qBAAqB,kBAC/B,SAAS,EAAE,CAAC,4BAA4B,CAAC;eACzC,MAAM,EAAE,sBACN,oBAAoB,sBACpB,UAAU,sBACV,eAAe,sBACf,cAAc,sBACd,QAAQ,sBACR,MAAM,sBACN,UAAU,sBACV,UAAU,sBACV,OAAO,sBACP,UAAU,sBACV,MAAM,sBACN,OAAO,sBACP,YAAY,sBACZ,WAAW,sBACX,aAAa,sBAEb,eAAe,sBACf,WAAW,sBACX,IAAI,kBACL,kBACD,OAAO,EAAE,CAAC,iBAAiB,EAAE,cAAc,EAAE,mBAAmB,CAAC,kBACjE,MAAM,EAAE,EAAE,kBACV,QAAQ,EAAE,CAAZ;;;qEA4BA,CAAC,cACA,EAAD,EAAA;;;;;;;;;;;;wEACC;AAAC;AAAmB;AACP,IAlEd,EAAA,IAAA,EAAQ,uBAAuB,GAA/B;AAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iFAAE;AAAC;AAAC;AAAI;AAAkC;AAC1C;ACDF,MAAM,YAAY,GAAG;AACrB,IAAE,mBAAmB;AACrB,IAAE,0BAA0B;AAC5B,CAAC,CAAC;AACF,MAAM,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC;AAO/B,MAAA,gBAAA,CAAA;AAAE;AAAQ;AAAmB;AACxB,IAAH,OAAO,OAAO,GAAhB;AAAE,QACE,OAAO;AACX,YAAM,QAAQ,EAAE,gBAAgB;AAChC,YAAM,SAAS,EAAE;AACjB,gBAAQ,uBAAuB;AAC/B,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH;AACO;AAAmB;AAAQ,IAAhC,OAAO,QAAQ,GAAjB;AAAE,QACE,OAAO;AACX,YAAM,QAAQ,EAAE,gBAAgB;AAChC,YAAM,SAAS,EAAE,EAAE;AACnB,SAAK,CAAC;AACN,KAAG;AACH;oCArBA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;EACR,OAAO,EAAE,CAAC,YAAY,CAAC,kBACvB,YAAY,EAAE,CAAC,YAAY,CAAC,kBAC5B,OAAO,EAAE,CAAC,OAAO,CAAC,cACnB,EAAD,EAAA,2CACC;AAAC;AAAmB;;;;;;;;;0BACW;AAAC;AAAC;AAAI;AAErB;AAEZ;AAAI;AAAC;AAAI;AAGb;AAEoC;AAAI;AACvC;AAC2B;AAAI;AACjC;AAIqH","sourcesContent":["export type starRatingSizes = 'small' | 'medium' | 'large';\r\nexport type starRatingColor = 'default' | 'negative' | 'ok' | 'positive';\r\nexport type starRatingSpeed = 'immediately' | 'noticeable' | 'slow';\r\nexport type starRatingLabelPosition = 'left' | 'right' | 'top' | 'bottom';\r\nexport type starRatingStarTypes = 'svg' | 'icon' | 'custom-icon';\r\nexport type starRatingStarSpace = 'no' | 'between' | 'around';\r\nexport type starRatingDirection = 'rtl' | 'ltr';\r\n\r\nexport class StarRatingConfig {\r\n  // binding defaults\r\n  numOfStars?: number;\r\n  size?: starRatingSizes;\r\n  speed?: starRatingSpeed;\r\n  labelPosition?: starRatingLabelPosition;\r\n  starType?: starRatingStarTypes;\r\n  staticColor: starRatingColor;\r\n  getColor?: (\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ) => starRatingColor;\r\n  getHalfStarVisible?: (rating: number) => boolean;\r\n  // statics\r\n  classEmpty?: string;\r\n  classHalf?: string;\r\n  classFilled?: string;\r\n  assetsPath?: string;\r\n  svgPath?: string;\r\n  svgEmptySymbolId?: string;\r\n  svgHalfSymbolId?: string;\r\n  svgFilledSymbolId?: string;\r\n  svgPathEmpty?: string;\r\n  svgPathHalf?: string;\r\n  svgPathFilled?: string;\r\n}\r\n","import { starRatingColor } from '../interfaces/star-rating-config.interface';\r\nexport class StarRatingUtils {\r\n  //Static methods\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /*\r\n     * getStarsArray\r\n     *\r\n     * returns an array of increasing numbers starting at 1\r\n     *\r\n     * @param numOfStars\r\n     * @returns {Array}\r\n     */\r\n  static getStarsArray(numOfStars: number): Array<number> {\r\n    let stars: Array<number> = [];\r\n    for (let i = 0; i < numOfStars; i++) {\r\n      stars.push(i + 1);\r\n    }\r\n    return stars;\r\n  }\r\n\r\n  /*\r\n     * getHalfStarVisible\r\n     *\r\n     * Returns true if there should be a half star visible, and false if not.\r\n     *\r\n     * @param rating\r\n     * @returns {boolean}\r\n     */\r\n  static getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n\r\n  /*\r\n     * getColor\r\n     *\r\n     * The default function for color calculation\r\n     * based on the current rating and the the number of stars possible.\r\n     * If a staticColor is set the function will use it as return value.\r\n     *\r\n     * @param rating\r\n     * @param numOfStars\r\n     * @param staticColor\r\n     * @returns {starRatingColor}\r\n     */\r\n  static getColor(\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    //if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    //calculate size of smallest fraction\r\n    let fractionSize = numOfStars / 3;\r\n\r\n    //apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  /*\r\n     * isDigitKeyEventCode\r\n     * detects digit key event sodes\r\n     * @param eventCode\r\n     * @returns {boolean}\r\n     */\r\n  static isDigitKeyEventCode(eventCode: string): boolean {\r\n    return eventCode.indexOf('Digit') === 0;\r\n  }\r\n}\r\n","import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingDirection,\r\n  starRatingLabelPosition,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarSpace,\r\n  starRatingStarTypes\r\n} from '../interfaces/star-rating-config.interface';\r\nimport { StarRatingConfigService } from './star-rating-config.service';\r\nimport { StarRatingUtils } from './star-rating.utils';\r\n\r\nexport class StarRating {\r\n  protected config: StarRatingConfig;\r\n\r\n  //CTRL ONLY\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n  classEmpty: string;\r\n  classHalf: string;\r\n  classFilled: string;\r\n\r\n  pathEmpty: string;\r\n  pathHalf: string;\r\n  pathFilled: string;\r\n\r\n  color: starRatingColor;\r\n  stars: Array<number>;\r\n  ratingAsInteger: number;\r\n  halfStarVisible: boolean;\r\n\r\n  /////////////////////////////////////////////\r\n\r\n\r\n  set rating(value: number) {\r\n    this.setRating(value);\r\n  }\r\n\r\n  /**\r\n   * showHalfStars\r\n   */\r\n  protected _showHalfStars: boolean;\r\n  get showHalfStars(): boolean {\r\n    return this._showHalfStars;\r\n  }\r\n\r\n  set showHalfStars(value: boolean) {\r\n    this._showHalfStars = !!value;\r\n\r\n    //update halfStarVisible\r\n    this.setHalfStarVisible();\r\n  }\r\n\r\n  /**\r\n   * getColor\r\n   */\r\n  getColor: (\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ) => starRatingColor;\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * getHalfStarVisible\r\n   */\r\n  getHalfStarVisible: (rating: number) => boolean;\r\n  /////////////////////////////////////////////\r\n\r\n  //Inputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * id property to identify the DOM element\r\n   */\r\n  protected _id: string;\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: string) {\r\n    this._id = value || '';\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * focus\r\n   */\r\n  protected _focus: boolean;\r\n  get focus(): boolean {\r\n    return this._focus;\r\n  }\r\n\r\n  set focus(value: boolean) {\r\n    this._focus = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelText\r\n   */\r\n  protected _labelText: string;\r\n  get labelText(): string {\r\n    return this._labelText;\r\n  }\r\n\r\n  set labelText(value: string) {\r\n    this._labelText = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelPosition\r\n   */\r\n  protected _labelPosition: starRatingLabelPosition;\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(value: starRatingLabelPosition) {\r\n    this._labelPosition = value || this.config.labelPosition;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelVisible\r\n   */\r\n  protected _labelVisible: boolean;\r\n  get labelVisible(): boolean {\r\n    return this._labelVisible;\r\n  }\r\n\r\n  set labelVisible(value: boolean) {\r\n    this._labelVisible = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverEnabled\r\n   */\r\n  protected _hoverEnabled: boolean;\r\n  get hoverEnabled(): boolean {\r\n    return this._hoverEnabled;\r\n  }\r\n\r\n  set hoverEnabled(value: boolean) {\r\n    this._hoverEnabled = value !== undefined ? !!value : false;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * staticColor\r\n   */\r\n  protected _staticColor: starRatingColor;\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor || this.config.staticColor || undefined;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n\r\n    //update color.\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * direction\r\n   */\r\n  protected _direction: starRatingDirection;\r\n  get direction(): starRatingDirection {\r\n    return this._direction;\r\n  }\r\n\r\n  set direction(value: starRatingDirection) {\r\n    this._direction = value || undefined;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * numOfStars\r\n   */\r\n  protected _numOfStars: number;\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(value: number) {\r\n    this._numOfStars = value > 0 ? value : this.config.numOfStars;\r\n\r\n    //update stars array\r\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\r\n\r\n    //update color\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverRating\r\n   */\r\n  protected _hoverRating: number;\r\n  get hoverRating(): number {\r\n    return this._hoverRating;\r\n  }\r\n\r\n  set hoverRating(value: number) {\r\n    this._hoverRating = value > 0 ? value : 0;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * speed\r\n   */\r\n  protected _speed: starRatingSpeed;\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(value: starRatingSpeed) {\r\n    this._speed = value || this.config.speed;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * size\r\n   */\r\n  protected _size: starRatingSizes;\r\n  get size(): starRatingSizes {\r\n    return this._size || this.config.size;\r\n  }\r\n\r\n  set size(value: starRatingSizes) {\r\n    this._size = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * starType\r\n   */\r\n  protected _starType: starRatingStarTypes;\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType || this.config.starType;\r\n  }\r\n\r\n  set starType(value: starRatingStarTypes) {\r\n    this._starType = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * space\r\n   */\r\n  protected _space: starRatingStarSpace;\r\n  get space(): starRatingStarSpace {\r\n    return this._space;\r\n  }\r\n\r\n  set space(value: starRatingStarSpace) {\r\n    this._space = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * readOnly\r\n   */\r\n  protected _readOnly: boolean;\r\n  get readOnly(): boolean {\r\n    return this._readOnly;\r\n  }\r\n\r\n  set readOnly(value: boolean) {\r\n    this._readOnly = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * disabled\r\n   */\r\n  protected _disabled: boolean;\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  private _step: number;\r\n  get step(): number {\r\n    return this._step;\r\n  }\r\n\r\n  set step(value: number) {\r\n    this._step = value > 0 ? value : 1;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * rating\r\n   */\r\n  protected _rating: number;\r\n  get rating(): number {\r\n    return this._rating;\r\n  }\r\n\r\n  /**\r\n   * setRating\r\n   * I use a setter function instead of a set method to enable overrides for this function.\r\n   * @param value\r\n   */\r\n  setRating(value: number) {\r\n    //validate and apply newRating\r\n    let newRating = 0;\r\n    if (value >= 0 && value <= this.numOfStars) {\r\n      newRating = value;\r\n    }\r\n\r\n    //limit max value to max number of stars\r\n    if (value > this.numOfStars) {\r\n      newRating = this.numOfStars;\r\n    }\r\n    this._rating = newRating;\r\n\r\n    //update ratingAsInteger. rating parsed to int for the value-[n] modifier\r\n    this.ratingAsInteger = parseInt(this._rating.toString(), 10);\r\n\r\n    //update halfStarsVisible\r\n    this.setHalfStarVisible();\r\n\r\n    //update calculated Color\r\n    this.setColor();\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    this.config = config;\r\n\r\n    //set default ctrl props\r\n    this.classEmpty = this.config.classEmpty;\r\n    this.classHalf = this.config.classHalf;\r\n    this.classFilled = this.config.classFilled;\r\n    this.pathEmpty = this.config.svgPathEmpty;\r\n    this.pathHalf = this.config.svgPathHalf;\r\n    this.pathFilled = this.config.svgPathFilled;\r\n\r\n    //set default Component Inputs\r\n    if (\r\n      'getColor' in this.config &&\r\n      typeof this.config.getColor === 'function'\r\n    ) {\r\n      this.getColor = this.config.getColor;\r\n    }\r\n\r\n    if (\r\n      'getHalfStarVisible' in this.config &&\r\n      typeof this.config.getHalfStarVisible === 'function'\r\n    ) {\r\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\r\n    }\r\n\r\n    this.numOfStars = this.config.numOfStars;\r\n    this.rating = 0;\r\n    this.step = 1;\r\n  }\r\n\r\n  svgVisible(): boolean {\r\n    return this.starType === 'svg';\r\n  }\r\n\r\n  interactionPossible(): boolean {\r\n    return !this.readOnly && !this.disabled;\r\n  }\r\n\r\n  setColor(useHoverValue = false): void {\r\n    //check if custom function is given\r\n    const ratingValue = useHoverValue ? this.hoverRating: this.rating;\r\n    if (typeof this.getColor === 'function') {\r\n      this.color = this.getColor(\r\n        ratingValue,\r\n        this.numOfStars,\r\n        this.staticColor\r\n      );\r\n    } else {\r\n      this.color = StarRatingUtils.getColor(\r\n        ratingValue,\r\n        this.numOfStars,\r\n        this.staticColor\r\n      );\r\n    }\r\n  }\r\n\r\n  setHalfStarVisible(): void {\r\n    //update halfStarVisible\r\n    if (this.showHalfStars) {\r\n      //check if custom function is given\r\n      if (typeof this.getHalfStarVisible === 'function') {\r\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\r\n      } else {\r\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\r\n      }\r\n    } else {\r\n      this.halfStarVisible = false;\r\n    }\r\n  }\r\n\r\n  getComponentClassNames(): string {\r\n    const classNames: string[] = [];\r\n\r\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\r\n    classNames.push(this.halfStarVisible ? 'half' : '');\r\n    classNames.push(this.hoverEnabled ? 'hover' : '');\r\n\r\n    const hoverRating = this.hoverRating\r\n      ? 'hover-' + this.hoverRating\r\n      : 'hover-0';\r\n    classNames.push(this.hoverEnabled ? hoverRating : '');\r\n\r\n    classNames.push(this.space ? 'space-' + this.space : '');\r\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\r\n    classNames.push(this.color ? 'color-' + this.color : '');\r\n    classNames.push(this.starType ? 'star-' + this.starType : '');\r\n    classNames.push(this.speed);\r\n    classNames.push(this.size);\r\n    classNames.push(this.readOnly ? 'read-only' : '');\r\n    classNames.push(this.disabled ? 'disabled' : '');\r\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\r\n\r\n    return classNames.join(' ');\r\n  }\r\n\r\n  increment() {\r\n    //increment to next higher step\r\n    const absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\r\n  }\r\n\r\n  decrement() {\r\n    //decrement to next lower step\r\n    const absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\r\n  }\r\n\r\n  reset() {\r\n    this.rating = 0;\r\n  }\r\n}\r\n","import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarTypes,\r\n  starRatingLabelPosition\r\n} from '../interfaces/star-rating-config.interface';\r\n\r\n/**\r\n * Configuration service for the StarRating component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the star ratings used in the application.\r\n */\r\nexport class StarRatingConfigService implements StarRatingConfig {\r\n  _classEmpty = 'default-star-empty-icon';\r\n\r\n  get classEmpty() {\r\n    return this._classEmpty;\r\n  }\r\n\r\n  set classEmpty(classEmpty: string) {\r\n    this._classEmpty = classEmpty;\r\n  }\r\n\r\n  private _classHalf = 'default-star-half-icon';\r\n\r\n  get classHalf(): string {\r\n    return this._classHalf;\r\n  }\r\n\r\n  set classHalf(classHalf: string) {\r\n    this._classHalf = classHalf;\r\n  }\r\n\r\n  private _classFilled = 'default-star-filled-icon';\r\n\r\n  get classFilled(): string {\r\n    return this._classFilled;\r\n  }\r\n\r\n  set classFilled(classFilled: string) {\r\n    this._classFilled = classFilled;\r\n  }\r\n\r\n  private _numOfStars = 5;\r\n\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(numOfStars: number) {\r\n    this._numOfStars = numOfStars;\r\n  }\r\n\r\n  private _size: starRatingSizes = 'medium';\r\n\r\n  get size(): starRatingSizes {\r\n    return this._size;\r\n  }\r\n\r\n  set size(size: starRatingSizes) {\r\n    this._size = size;\r\n  }\r\n\r\n  private _staticColor: starRatingColor;\r\n\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n  }\r\n\r\n  private _labelPosition: starRatingLabelPosition = 'left';\r\n\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(labelPosition: starRatingLabelPosition) {\r\n    this._labelPosition = labelPosition;\r\n  }\r\n\r\n  private _speed: starRatingSpeed = 'noticeable';\r\n\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(speed: starRatingSpeed) {\r\n    this._speed = speed;\r\n  }\r\n\r\n  private _starType: starRatingStarTypes = 'svg';\r\n\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType;\r\n  }\r\n\r\n  set starType(starType: starRatingStarTypes) {\r\n    this._starType = starType;\r\n  }\r\n\r\n  private _assetsPath = 'assets/images/';\r\n\r\n  get assetsPath(): string {\r\n    return this._assetsPath;\r\n  }\r\n\r\n  set assetsPath(assetsPath: string) {\r\n    this._assetsPath = assetsPath;\r\n  }\r\n\r\n  private _svgPath = this.assetsPath + 'star-rating.icons.svg';\r\n\r\n  get svgPath(): string {\r\n    return this._svgPath;\r\n  }\r\n\r\n  set svgPath(svgPath: string) {\r\n    this._svgPath = svgPath;\r\n  }\r\n\r\n  private _svgEmptySymbolId = 'star-empty';\r\n\r\n  get svgEmptySymbolId(): string {\r\n    return this._svgEmptySymbolId;\r\n  }\r\n\r\n  set svgEmptySymbolId(svgEmptySymbolId: string) {\r\n    this._svgEmptySymbolId = svgEmptySymbolId;\r\n  }\r\n\r\n  private _svgHalfSymbolId = 'star-half';\r\n\r\n  get svgHalfSymbolId(): string {\r\n    return this._svgHalfSymbolId;\r\n  }\r\n\r\n  set svgHalfSymbolId(svgHalfSymbolId: string) {\r\n    this._svgHalfSymbolId = svgHalfSymbolId;\r\n  }\r\n\r\n  private _svgFilledSymbolId = 'star-filled';\r\n\r\n  get svgFilledSymbolId(): string {\r\n    return this._svgFilledSymbolId;\r\n  }\r\n\r\n  set svgFilledSymbolId(svgFilledSymbolId: string) {\r\n    this._svgFilledSymbolId = svgFilledSymbolId;\r\n  }\r\n\r\n  private _svgPathEmpty: string = this.svgPath + '#' + this.svgEmptySymbolId;\r\n\r\n  get svgPathEmpty(): string {\r\n    return this._svgPathEmpty;\r\n  }\r\n\r\n  set svgPathEmpty(svgPathEmpty: string) {\r\n    this._svgPathEmpty = svgPathEmpty;\r\n  }\r\n\r\n  private _svgPathHalf: string = this.svgPath + '#' + this.svgHalfSymbolId;\r\n\r\n  get svgPathHalf(): string {\r\n    return this._svgPathHalf;\r\n  }\r\n\r\n  set svgPathHalf(svgPathHalf: string) {\r\n    this._svgPathHalf = svgPathHalf;\r\n  }\r\n\r\n  private _svgPathFilled: string = this.svgPath + '#' + this.svgFilledSymbolId;\r\n\r\n  get svgPathFilled(): string {\r\n    return this._svgPathFilled;\r\n  }\r\n\r\n  set svgPathFilled(svgPathFilled: string) {\r\n    this._svgPathFilled = svgPathFilled;\r\n  }\r\n\r\n  getColor(\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    // if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    // calculate size of smallest fraction\r\n    const fractionSize = numOfStars / 3;\r\n\r\n    // apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n}\r\n","import {Component, EventEmitter} from '@angular/core';\r\nimport {ClickEvent} from '../../interfaces/click-event.interface';\r\nimport {HoverRatingChangeEvent} from '../../interfaces/hover-rating-change-event.interface';\r\nimport {RatingChangeEvent} from '../../interfaces/rating-change-event.interface';\r\nimport {StarRating} from '../../services/star-rating';\r\nimport {StarRatingConfigService} from '../../services/star-rating-config.service';\r\nimport {StarRatingUtils} from '../../services/star-rating.utils';\r\n\r\n@Component({\r\n  selector: 'star-rating',\r\n  inputs: [\r\n    'getHalfStarVisible',\r\n    'getColor',\r\n    'showHalfStars',\r\n    'hoverEnabled',\r\n    'rating',\r\n    'step',\r\n    'disabled',\r\n    'readOnly',\r\n    'space',\r\n    'starType',\r\n    'size',\r\n    'speed',\r\n    'numOfStars',\r\n    'direction',\r\n    'staticColor',\r\n    //, 'labelVisible'\r\n    'labelPosition',\r\n    'labelText',\r\n    'id'\r\n  ],\r\n  outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\r\n  styles: [],\r\n  template: `<div id=\"{{id}}\"\r\n  class=\"rating {{getComponentClassNames()}}\"\r\n  tabindex=\"0\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  (mouseleave)=\"onStarHover(0)\">\r\n    <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\r\n    <div class=\"star-container\">\r\n        <div class=\"star\"\r\n          (mouseenter)=\"onStarHover(star)\"\r\n          *ngFor=\"let star of stars\"\r\n          (click)=\"onStarClicked(star)\">\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-half {{classHalf}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-empty\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathEmpty\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-half\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathHalf\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-filled\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathFilled\"></use>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n})\r\nexport class StarRatingComponent extends StarRating {\r\n  //Outputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  starClickChange: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\r\n\r\n  ratingChange: EventEmitter<RatingChangeEvent> = new EventEmitter<\r\n    RatingChangeEvent\r\n  >();\r\n\r\n  hoverRatingChange: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<\r\n    HoverRatingChangeEvent\r\n  >();\r\n\r\n  saveOnClick($event: ClickEvent) {\r\n    if (this.starClickChange) {\r\n      this.starClickChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnRatingChange($event: RatingChangeEvent) {\r\n    if (this.ratingChange) {\r\n      this.ratingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnHover($event: HoverRatingChangeEvent) {\r\n    if (this.hoverRatingChange) {\r\n      this.hoverRatingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  /**ACCESSIBILITY **/\r\n\r\n  //Keyboard events\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    const handlers: any = {\r\n      //Decrement\r\n      Minus: () => this.decrement(),\r\n      ArrowDown: () => this.decrement(),\r\n      ArrowLeft: () => this.decrement(),\r\n\r\n      //Increment\r\n      Plus: () => this.increment(),\r\n      ArrowRight: () => this.increment(),\r\n      ArrowUp: () => this.increment(),\r\n\r\n      //Reset\r\n      Backspace: () => this.reset(),\r\n      Delete: () => this.reset(),\r\n      Digit0: () => this.reset()\r\n    };\r\n\r\n    const handleDigits = (eventCode: string): void => {\r\n      const dStr = 'Digit';\r\n      const digit: number = parseInt(\r\n        eventCode.substr(dStr.length, eventCode.length - 1), 10\r\n      );\r\n      this.rating = digit;\r\n    };\r\n\r\n    if (\r\n      handlers[event['code']] ||\r\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\r\n    ) {\r\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n        handleDigits(event['code']);\r\n      } else {\r\n        handlers[event['code']]();\r\n      }\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n  }\r\n\r\n  //Hover events\r\n  onStarHover(rating?: number): void {\r\n    if (!this.interactionPossible() || !this.hoverEnabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\r\n    //update calculated Color\r\n    this.setColor(true);\r\n\r\n    //fire onHoverRatingChange event\r\n    const $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\r\n    this.saveOnHover($event);\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    super(config);\r\n  }\r\n\r\n  //Overrides\r\n  setRating(value: number): void {\r\n    const initValue = this.rating;\r\n    super.setRating(value);\r\n\r\n    //if value changed trigger valueAccessor events and outputs\r\n    if (initValue !== this.rating) {\r\n      const $event: RatingChangeEvent = { rating: this.rating };\r\n      this.saveOnRatingChange($event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onStarClicked\r\n   *\r\n   * Is fired when a star is clicked. And updated the rating value.\r\n   * This function returns if the disabled or readOnly\r\n   * property is set. If provided it emits the onClick event\r\n   * handler with the actual rating value.\r\n   *\r\n   * @param rating\r\n   */\r\n  onStarClicked(rating: number): void {\r\n    //fire onClick event\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    this.rating = rating;\r\n\r\n    const onClickEventObject: ClickEvent = {\r\n      rating: this.rating\r\n    };\r\n    this.saveOnClick(onClickEventObject);\r\n  }\r\n}\r\n","import {Component, EventEmitter, forwardRef} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {ClickEvent} from '../../interfaces/click-event.interface';\r\nimport {HoverRatingChangeEvent} from '../../interfaces/hover-rating-change-event.interface';\r\nimport {RatingChangeEvent} from '../../interfaces/rating-change-event.interface';\r\nimport {StarRating} from '../../services/star-rating';\r\nimport {StarRatingConfigService} from '../../services/star-rating-config.service';\r\nimport {StarRatingUtils} from '../../services/star-rating.utils';\r\n\r\nconst STAR_RATING_CONTROL_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => StarRatingControlComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'star-rating-control',\r\n  providers: [STAR_RATING_CONTROL_ACCESSOR],\r\n  inputs: [\r\n    'getHalfStarVisible',\r\n    'getColor',\r\n    'showHalfStars',\r\n    'hoverEnabled',\r\n    'rating',\r\n    'step',\r\n    'disabled',\r\n    'readOnly',\r\n    'space',\r\n    'starType',\r\n    'size',\r\n    'speed',\r\n    'numOfStars',\r\n    'direction',\r\n    'staticColor',\r\n    //, 'labelVisible'\r\n    'labelPosition',\r\n    'labelText',\r\n    'id'\r\n  ],\r\n  outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\r\n  styles: [],\r\n  template: `<div id=\"{{id}}\"\r\n  class=\"rating {{getComponentClassNames()}}\"\r\n  tabindex=\"0\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  (blur)=\"onBlur($event)\"\r\n  (focus)=\"onFocus($event)\"\r\n  (mouseleave)=\"onStarHover(0)\">\r\n    <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\r\n    <div class=\"star-container\">\r\n        <div class=\"star\"\r\n          (mouseenter)=\"onStarHover(star)\"\r\n          *ngFor=\"let star of stars\"\r\n          (click)=\"onStarClicked(star)\">\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-half {{classHalf}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-empty\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathEmpty\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-half\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathHalf\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-filled\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathFilled\"></use>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n})\r\nexport class StarRatingControlComponent extends StarRating\r\n  implements ControlValueAccessor {\r\n  //Outputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  starClickChange: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\r\n\r\n  ratingChange: EventEmitter<RatingChangeEvent> = new EventEmitter<\r\n    RatingChangeEvent\r\n  >();\r\n\r\n  hoverRatingChange: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<\r\n    HoverRatingChangeEvent\r\n  >();\r\n\r\n  onTouch: Function;\r\n  onModelChange: Function;\r\n  private onModelChangeRegistered = false;\r\n  private onTouchRegistered = false;\r\n\r\n  saveOnClick($event: ClickEvent) {\r\n    if (this.starClickChange) {\r\n      this.starClickChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnRatingChange($event: RatingChangeEvent) {\r\n    if (this.ratingChange) {\r\n      this.ratingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnHover($event: HoverRatingChangeEvent) {\r\n    if (this.hoverRatingChange) {\r\n      this.hoverRatingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnTouch() {\r\n    if (this.onTouchRegistered) {\r\n      this.onTouch();\r\n    }\r\n  }\r\n\r\n  saveOnModelChange(value: number) {\r\n    if (this.onModelChangeRegistered) {\r\n      this.onModelChange(value);\r\n    }\r\n  }\r\n\r\n  /**ACCESSIBILITY **/\r\n\r\n  //Keyboard events\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    const handlers: any = {\r\n      //Decrement\r\n      Minus: () => this.decrement(),\r\n      ArrowDown: () => this.decrement(),\r\n      ArrowLeft: () => this.decrement(),\r\n\r\n      //Increment\r\n      Plus: () => this.increment(),\r\n      ArrowRight: () => this.increment(),\r\n      ArrowUp: () => this.increment(),\r\n\r\n      //Reset\r\n      Backspace: () => this.reset(),\r\n      Delete: () => this.reset(),\r\n      Digit0: () => this.reset()\r\n    };\r\n\r\n    const handleDigits = (eventCode: string): void => {\r\n      const dStr = 'Digit';\r\n      const digit: number = parseInt(\r\n        eventCode.substr(dStr.length, eventCode.length - 1), 10\r\n      );\r\n      this.rating = digit;\r\n    };\r\n\r\n    if (\r\n      handlers[event['code']] ||\r\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\r\n    ) {\r\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n        handleDigits(event['code']);\r\n      } else {\r\n        handlers[event['code']]();\r\n      }\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Focus events\r\n  onBlur(event: FocusEvent) {\r\n    this.focus = false;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    this.focus = true;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Hover events\r\n  onStarHover(rating?: number): void {\r\n    if (!this.interactionPossible() || !this.hoverEnabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\r\n\r\n    //fire onHoverRatingChange event\r\n    const $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\r\n    this.saveOnHover($event);\r\n  }\r\n\r\n  /**Form Control - ControlValueAccessor implementation**/\r\n\r\n  writeValue(obj: any): void {\r\n    this.rating = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n    this.onModelChangeRegistered = true;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n    this.onTouchRegistered = true;\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    super(config);\r\n  }\r\n\r\n  //Overrides\r\n  setRating(value: number): void {\r\n    const initValue = this.rating;\r\n    super.setRating(value);\r\n\r\n    //if value changed trigger valueAccessor events and outputs\r\n    if (initValue !== this.rating) {\r\n      const $event: RatingChangeEvent = { rating: this.rating };\r\n      this.saveOnRatingChange($event);\r\n\r\n      this.saveOnModelChange(this.rating);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onStarClicked\r\n   *\r\n   * Is fired when a star is clicked. And updated the rating value.\r\n   * This function returns if the disabled or readOnly\r\n   * property is set. If provided it emits the onClick event\r\n   * handler with the actual rating value.\r\n   *\r\n   * @param rating\r\n   */\r\n  onStarClicked(rating: number): void {\r\n    //fire onClick event\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    this.rating = rating;\r\n\r\n    const onClickEventObject: ClickEvent = {\r\n      rating: this.rating\r\n    };\r\n    this.saveOnClick(onClickEventObject);\r\n  }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {StarRatingComponent} from './components/star-rating/star-rating.component';\r\nimport {StarRatingControlComponent} from './components/star-rating-control/star-rating-control.component';\r\nimport {StarRatingConfigService} from './services/star-rating-config.service';\r\n\r\nconst DECLARATIONS = [\r\n  StarRatingComponent,\r\n  StarRatingControlComponent\r\n];\r\nconst EXPORTS = [DECLARATIONS];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [DECLARATIONS],\r\n  exports: [EXPORTS]\r\n})\r\nexport class StarRatingModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StarRatingModule,\r\n      providers: [\r\n        StarRatingConfigService\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StarRatingModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}